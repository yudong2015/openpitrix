// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// OpenpitrixPrice *************************************************************
// *********************** Billing *****************************
// *************************************************************
// price
// swagger:model openpitrixPrice
type OpenpitrixPrice struct {

	// attribute id
	AttributeID string `json:"attribute_id,omitempty"`

	// create time
	CreateTime strfmt.DateTime `json:"create_time,omitempty"`

	// currency
	Currency OpenpitrixCurrency `json:"currency,omitempty"`

	// end time
	EndTime strfmt.DateTime `json:"end_time,omitempty"`

	// price id
	PriceID string `json:"price_id,omitempty"`

	// prices
	Prices map[string]float64 `json:"prices,omitempty"`

	// sku id
	SkuID string `json:"sku_id,omitempty"`

	// start time
	StartTime strfmt.DateTime `json:"start_time,omitempty"`

	// status
	Status string `json:"status,omitempty"`

	// status time
	StatusTime strfmt.DateTime `json:"status_time,omitempty"`
}

// Validate validates this openpitrix price
func (m *OpenpitrixPrice) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCurrency(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *OpenpitrixPrice) validateCurrency(formats strfmt.Registry) error {

	if swag.IsZero(m.Currency) { // not required
		return nil
	}

	if err := m.Currency.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("currency")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *OpenpitrixPrice) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OpenpitrixPrice) UnmarshalBinary(b []byte) error {
	var res OpenpitrixPrice
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
