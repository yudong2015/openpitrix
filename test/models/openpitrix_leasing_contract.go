// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// OpenpitrixLeasingContract openpitrix leasing contract
// swagger:model openpitrixLeasingContract
type OpenpitrixLeasingContract struct {

	// contract id
	ContractID string `json:"contract_id,omitempty"`

	// coupon fee
	CouponFee float64 `json:"coupon_fee,omitempty"`

	// create time
	CreateTime strfmt.DateTime `json:"create_time,omitempty"`

	// currency
	Currency string `json:"currency,omitempty"`

	// due fee
	DueFee float64 `json:"due_fee,omitempty"`

	// fee
	Fee float64 `json:"fee,omitempty"`

	// fee info
	FeeInfo string `json:"fee_info,omitempty"`

	// leasing id
	LeasingID string `json:"leasing_id,omitempty"`

	// metering values
	MeteringValues map[string]float64 `json:"metering_values,omitempty"`

	// other contract fee
	OtherContractFee float64 `json:"other_contract_fee,omitempty"`

	// real fee
	RealFee float64 `json:"real_fee,omitempty"`

	// resource id
	ResourceID string `json:"resource_id,omitempty"`

	// sku id
	SkuID string `json:"sku_id,omitempty"`

	// start time
	StartTime strfmt.DateTime `json:"start_time,omitempty"`

	// status
	Status string `json:"status,omitempty"`

	// status time
	StatusTime strfmt.DateTime `json:"status_time,omitempty"`

	// user id
	UserID string `json:"user_id,omitempty"`
}

// Validate validates this openpitrix leasing contract
func (m *OpenpitrixLeasingContract) Validate(formats strfmt.Registry) error {
	var res []error

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (m *OpenpitrixLeasingContract) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OpenpitrixLeasingContract) UnmarshalBinary(b []byte) error {
	var res OpenpitrixLeasingContract
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
