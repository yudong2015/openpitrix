// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// OpenpitrixAttributeType openpitrix attribute type
// swagger:model openpitrixAttributeType
type OpenpitrixAttributeType string

const (
	// OpenpitrixAttributeTypeNORMAL captures enum value "NORMAL"
	OpenpitrixAttributeTypeNORMAL OpenpitrixAttributeType = "NORMAL"
	// OpenpitrixAttributeTypeMETERING captures enum value "METERING"
	OpenpitrixAttributeTypeMETERING OpenpitrixAttributeType = "METERING"
)

// for schema
var openpitrixAttributeTypeEnum []interface{}

func init() {
	var res []OpenpitrixAttributeType
	if err := json.Unmarshal([]byte(`["NORMAL","METERING"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		openpitrixAttributeTypeEnum = append(openpitrixAttributeTypeEnum, v)
	}
}

func (m OpenpitrixAttributeType) validateOpenpitrixAttributeTypeEnum(path, location string, value OpenpitrixAttributeType) error {
	if err := validate.Enum(path, location, value, openpitrixAttributeTypeEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this openpitrix attribute type
func (m OpenpitrixAttributeType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateOpenpitrixAttributeTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
